{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"E:\\\\TRISTAN\\\\Repos\\\\ReactReferenceData\\\\branches\\\\src\\\\components\\\\EmployeeEditForm\\\\EmployeeEditForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetEmployee } from \"../../api/employee\";\nimport { GetBranchCategory } from \"../../api/BranchCategory\";\nimport { GetRoles } from \"../../api/BankerRoles\";\nimport PropTypes from \"prop-types\";\nconst {\n  Title\n} = _Typography;\nconst {\n  Option\n} = _Select;\nconst FormItem = _Form.Item;\n\nfunction EmployeeEditForm(props) {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [branchCatData, setBranchCatData] = useState([]);\n\n  const [form] = _Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    //if props id is not null, get the data\n    async function GetRolesData() {\n      const response = await GetBranchCategory();\n      setBranchCatData(response);\n    }\n\n    async function GetBranchesData() {\n      const response = await GetRoles();\n      setRolesData(response);\n    }\n\n    async function GetData() {\n      const response = await GetEmployee(props.id);\n      setData(response);\n    }\n\n    GetRolesData();\n    GetBranchesData();\n    if (props.id !== 0) GetData();\n  }, [props.id]);\n  useEffect(() => {\n    data.map(x => form.setFieldsValue({\n      EmployeeID: x.empId,\n      channel: x.empChannelId,\n      BranchName: x.empBranchId,\n      StaffNumber: x.empStaffNo,\n      FirstName: x.empFirstName,\n      LastName: x.empLastName,\n      BankerRole: x.empBankerRoleId,\n      Email: x.empEmail\n    }));\n  }, [data]);\n  const formConfig = {\n    labelCol: {\n      span: 6\n    },\n    labelAlign: \"left\",\n    form\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 22\n    }\n  };\n  return /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \" Employee Administration \"))), /*#__PURE__*/React.createElement(_Row, {\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 20,\n    lg: 16,\n    xl: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form, Object.assign({}, formConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"channelId\",\n    label: \"Channel\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select Employee Channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, branchCatData.map(x => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 32\n      }\n    }, x.name);\n  }))))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"branchId\",\n    label: \"Branch Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Sandton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"staffNo\",\n    label: \"Staff Number\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"NB000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Morena\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Mantsha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"bankerRoleId\",\n    label: \"Banker Role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select Banker Role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, rolesData.map(x => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 32\n      }\n    }, x.name);\n  }))))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      type: \"email\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"banker@nedbank.co.za\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(_Button, {\n    htmlType: \"button\",\n    onClick: onReset,\n    style: {\n      margin: \"0 16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Reset\")))))));\n}\n\nEmployeeEditForm.prototype = {\n  OnFinish: PropTypes.func.required,\n  id: PropTypes.number.required\n};\nexport default EmployeeEditForm;","map":{"version":3,"sources":["E:/TRISTAN/Repos/ReactReferenceData/branches/src/components/EmployeeEditForm/EmployeeEditForm.js"],"names":["React","useEffect","useState","useHistory","GetEmployee","GetBranchCategory","GetRoles","PropTypes","Title","Option","FormItem","Item","EmployeeEditForm","props","history","data","setData","rolesData","setRolesData","branchCatData","setBranchCatData","form","useForm","onReset","resetFields","GetRolesData","response","GetBranchesData","GetData","id","map","x","setFieldsValue","EmployeeID","empId","channel","empChannelId","BranchName","empBranchId","StaffNumber","empStaffNo","FirstName","empFirstName","LastName","empLastName","BankerRole","empBankerRoleId","Email","empEmail","formConfig","labelCol","span","labelAlign","tailLayout","wrapperCol","offset","required","name","type","margin","prototype","OnFinish","func","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Input,\n  Select,\n  Typography,\n  Form,\n  Switch,\n  Button,\n} from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetEmployee } from \"../../api/employee\";\nimport { GetBranchCategory } from \"../../api/BranchCategory\";\nimport { GetRoles } from \"../../api/BankerRoles\";\nimport PropTypes from \"prop-types\";\nconst { Title } = Typography;\nconst { Option } = Select;\nconst FormItem = Form.Item;\n\nfunction EmployeeEditForm(props) {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [rolesData, setRolesData] = useState([]);\n  const [branchCatData, setBranchCatData] = useState([]);\n  const [form] = Form.useForm();\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    //if props id is not null, get the data\n\n    async function GetRolesData() {\n      const response = await GetBranchCategory();\n      setBranchCatData(response);\n    }\n    async function GetBranchesData() {\n      const response = await GetRoles();\n      setRolesData(response);\n    }\n    async function GetData() {\n      const response = await GetEmployee(props.id);\n      setData(response);\n    }\n\n    GetRolesData();\n    GetBranchesData();\n    if (props.id !== 0) GetData();\n  }, [props.id]);\n\n  useEffect(() => {\n    data.map((x) =>\n      form.setFieldsValue({\n        EmployeeID: x.empId,\n        channel: x.empChannelId,\n        BranchName: x.empBranchId,\n        StaffNumber: x.empStaffNo,\n        FirstName: x.empFirstName,\n        LastName: x.empLastName,\n        BankerRole: x.empBankerRoleId,\n        Email: x.empEmail,\n      })\n    );\n  }, [data]);\n  const formConfig = {\n    labelCol: {\n      span: 6,\n    },\n    labelAlign: \"left\",\n    form,\n  };\n\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 22,\n    },\n  };\n\n  return (\n    <Row justify=\"center\">\n      <Col span={24}>\n        <Row>\n          <Col span={12}>\n            <Title level={2}> Employee Administration </Title>\n          </Col>\n        </Row>\n        <Row justify=\"start\">\n          <Col md={20} lg={16} xl={16}>\n            <Form {...formConfig}>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"channelId\"\n                    label=\"Channel\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select placeholder=\"Select Employee Channel\">\n                      {branchCatData.map((x) => {\n                        return <Option key={x.id}>{x.name}</Option>;\n                      })}\n                    </Select>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"branchId\"\n                    label=\"Branch Name\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Sandton\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"staffNo\"\n                    label=\"Staff Number\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"NB000000\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"firstName\"\n                    label=\"First Name\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Morena\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"lastName\"\n                    label=\"Last Name\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Mantsha\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem name=\"bankerRoleId\" label=\"Banker Role\">\n                    <Select placeholder=\"Select Banker Role\">\n                      {rolesData.map((x) => {\n                        return <Option key={x.id}>{x.name}</Option>;\n                      })}\n                    </Select>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"email\"\n                    label=\"Email\"\n                    rules={[\n                      {\n                        type: \"email\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"banker@nedbank.co.za\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <FormItem {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  htmlType=\"button\"\n                  onClick={onReset}\n                  style={{ margin: \"0 16px\" }}\n                >\n                  Reset\n                </Button>\n              </FormItem>\n            </Form>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nEmployeeEditForm.prototype = {\n  OnFinish: PropTypes.func.required,\n  id: PropTypes.number.required,\n};\n\nexport default EmployeeEditForm;\n"]},"metadata":{},"sourceType":"module"}