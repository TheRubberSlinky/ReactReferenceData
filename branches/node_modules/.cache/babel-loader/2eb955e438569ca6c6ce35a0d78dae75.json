{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"E:\\\\TRISTAN\\\\Repos\\\\ReactReferenceData\\\\branches\\\\src\\\\pages\\\\StructureAdmin\\\\StructureAdmin.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\nimport NoData from \"../../components/Common/NoData/NoData\";\nimport StructureTree from \"../../components/StructureTree/StructureTree\";\nimport BranchEditForm from \"../../components/BranchEditForm/BranchEditForm\";\nimport EmployeeEditForm from \"../../components/EmployeeEditForm/EmployeeEditForm\";\nimport { UpdateEmployee } from \"../../api/employee\";\nimport { UpdateBranch } from \"../../api/Branch\";\n\nfunction StructureAdmin() {\n  const [selectedID, setSelectedID] = useState(0);\n  let {\n    path\n  } = useRouteMatch();\n  const history = useHistory();\n\n  function treeStructureOnMenuClick(type, data) {\n    if (type === \"Branch\") history.push(`${path}/branch`);else history.push(`${path}/employee`);\n  }\n\n  function treeStructureOnSelect(key, data) {\n    if (data.node.isLeaf) history.push(`${path}/employee/${data.node.dbid}`);else history.push(`${path}/branch/${data.node.dbid}`);\n  }\n\n  async function onFinishEmployee(data) {\n    debugger; //employeepost\n\n    console.log(data); //const response = await UpdateEmployee(data);\n    //if (response) return true;\n    //return false;\n  }\n\n  async function onFinishBranch(data) {\n    //branchPost\n    const response = await UpdateBranch(data);\n    if (response) return true;\n    return false;\n  }\n\n  function treeStructureOnDrop(childItem, parentItem) {\n    console.log(\"childItem\", childItem);\n    console.log(\"parentItem\", parentItem);\n  }\n\n  const structureConfig = {\n    branchCode: 812,\n    draggable: true,\n    onMenuClick: treeStructureOnMenuClick,\n    onDrop: treeStructureOnDrop,\n    onSelect: treeStructureOnSelect\n  };\n  return /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 23,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 64,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 8,\n    id: \"tree search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StructureTree, Object.assign({}, structureConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NoData, {\n    message: \"Please select a node from the tree structure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: `${path}/branch`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BranchEditForm, {\n    onFinish: onFinishBranch,\n    id: selectedID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: `${path}/employee`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeEditForm, {\n    FormFinish: onFinishEmployee,\n    id: selectedID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default StructureAdmin;","map":{"version":3,"sources":["E:/TRISTAN/Repos/ReactReferenceData/branches/src/pages/StructureAdmin/StructureAdmin.js"],"names":["React","useEffect","useState","Switch","Route","useRouteMatch","useHistory","NoData","StructureTree","BranchEditForm","EmployeeEditForm","UpdateEmployee","UpdateBranch","StructureAdmin","selectedID","setSelectedID","path","history","treeStructureOnMenuClick","type","data","push","treeStructureOnSelect","key","node","isLeaf","dbid","onFinishEmployee","console","log","onFinishBranch","response","treeStructureOnDrop","childItem","parentItem","structureConfig","branchCode","draggable","onMenuClick","onDrop","onSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport NoData from \"../../components/Common/NoData/NoData\";\nimport StructureTree from \"../../components/StructureTree/StructureTree\";\nimport BranchEditForm from \"../../components/BranchEditForm/BranchEditForm\";\nimport EmployeeEditForm from \"../../components/EmployeeEditForm/EmployeeEditForm\";\nimport { UpdateEmployee } from \"../../api/employee\";\nimport { UpdateBranch } from \"../../api/Branch\";\n\nfunction StructureAdmin() {\n  const [selectedID, setSelectedID] = useState(0);\n  let { path } = useRouteMatch();\n  const history = useHistory();\n\n  function treeStructureOnMenuClick(type, data) {\n    if (type === \"Branch\") history.push(`${path}/branch`);\n    else history.push(`${path}/employee`);\n  }\n\n  function treeStructureOnSelect(key, data) {\n    if (data.node.isLeaf) history.push(`${path}/employee/${data.node.dbid}`);\n    else history.push(`${path}/branch/${data.node.dbid}`);\n  }\n\n  async function onFinishEmployee(data) {\n    debugger;\n    //employeepost\n    console.log(data);\n    //const response = await UpdateEmployee(data);\n    //if (response) return true;\n    //return false;\n  }\n\n  async function onFinishBranch(data) {\n    //branchPost\n    const response = await UpdateBranch(data);\n    if (response) return true;\n    return false;\n  }\n\n  function treeStructureOnDrop(childItem, parentItem) {\n    console.log(\"childItem\", childItem);\n    console.log(\"parentItem\", parentItem);\n  }\n\n  const structureConfig = {\n    branchCode: 812,\n    draggable: true,\n    onMenuClick: treeStructureOnMenuClick,\n    onDrop: treeStructureOnDrop,\n    onSelect: treeStructureOnSelect,\n  };\n\n  return (\n    <Row justify=\"center\">\n      <Col span={23}>\n        <Row gutter={64} justify=\"center\">\n          <Col span={8} id=\"tree search\">\n            <StructureTree {...structureConfig} />\n          </Col>\n          <Col span={14}>\n            <Switch>\n              <Route exact path={path}>\n                <NoData message=\"Please select a node from the tree structure\" />\n              </Route>\n              <Route path={`${path}/branch`}>\n                <BranchEditForm onFinish={onFinishBranch} id={selectedID} />\n              </Route>\n              <Route path={`${path}/employee`}>\n                <EmployeeEditForm\n                  FormFinish={onFinishEmployee}\n                  id={selectedID}\n                />\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default StructureAdmin;\n"]},"metadata":{},"sourceType":"module"}