{"ast":null,"code":"const EmployeeURL = \"https://localhost:44385/api/Employees\";\nexport async function GetEmployee(EmployeeKey) {\n  let url = `${EmployeeURL}/${EmployeeKey}`;\n  let Employee = [];\n  let response = await fetch(url, {\n    method: \"GET\"\n  });\n  let json = await response.json();\n  json.map(Main => {\n    Employee.push({\n      empId: Main.id,\n      empIsActive: Main.isActive,\n      empBranchId: Main.Branch,\n      empChannelId: Main.channel.id,\n      empEmail: Main.empEmail,\n      empFirstName: Main.firstName,\n      empLastName: Main.lastName,\n      empBankerRoleId: Main.bankerRole.id,\n      empStaffNo: Main.staffNo\n    });\n  });\n  return Employee;\n}\nexport async function UpdateEmployee(EmployeeKey, EmployeeData) {\n  const body = [{\n    id: EmployeeData.id,\n    isActive: EmployeeData.isActive,\n    branchId: EmployeeData.branchId,\n    channelId: EmployeeData.channelId,\n    email: EmployeeData.email,\n    firstName: EmployeeData.firstName,\n    lastName: EmployeeData.lastName,\n    bankerRoleId: EmployeeData.bankerRoleId,\n    staffNo: EmployeeData.staffNo\n  }];\n\n  if (EmployeeKey) {\n    const url = `${EmployeeURL}/${EmployeeKey}`; //create a body to put the info in\n\n    const response = await fetch(url, {\n      method: \"PUT\",\n      body: JSON.stringify(body)\n    });\n    const json = await response.json();\n    if (json) return true;\n    return false;\n  } else {\n    const url = `${EmployeeURL}`; //create a body to put the info in\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(body)\n    });\n    const json = await response.json();\n    if (json) return true;\n    return false;\n  }\n}","map":{"version":3,"sources":["E:/TRISTAN/Repos/ReactReferenceData/branches/src/api/employee.js"],"names":["EmployeeURL","GetEmployee","EmployeeKey","url","Employee","response","fetch","method","json","map","Main","push","empId","id","empIsActive","isActive","empBranchId","Branch","empChannelId","channel","empEmail","empFirstName","firstName","empLastName","lastName","empBankerRoleId","bankerRole","empStaffNo","staffNo","UpdateEmployee","EmployeeData","body","branchId","channelId","email","bankerRoleId","JSON","stringify"],"mappings":"AAAA,MAAMA,WAAW,GAAG,uCAApB;AAEA,OAAO,eAAeC,WAAf,CAA2BC,WAA3B,EAAwC;AAC7C,MAAIC,GAAG,GAAI,GAAEH,WAAY,IAAGE,WAAY,EAAxC;AACA,MAAIE,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,IAAAA,MAAM,EAAE;AADsB,GAAN,CAA1B;AAGA,MAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAA,EAAAA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAU;AACjBN,IAAAA,QAAQ,CAACO,IAAT,CAAc;AACZC,MAAAA,KAAK,EAAEF,IAAI,CAACG,EADA;AAEZC,MAAAA,WAAW,EAAEJ,IAAI,CAACK,QAFN;AAGZC,MAAAA,WAAW,EAAEN,IAAI,CAACO,MAHN;AAIZC,MAAAA,YAAY,EAAER,IAAI,CAACS,OAAL,CAAaN,EAJf;AAKZO,MAAAA,QAAQ,EAAEV,IAAI,CAACU,QALH;AAMZC,MAAAA,YAAY,EAAEX,IAAI,CAACY,SANP;AAOZC,MAAAA,WAAW,EAAEb,IAAI,CAACc,QAPN;AAQZC,MAAAA,eAAe,EAAEf,IAAI,CAACgB,UAAL,CAAgBb,EARrB;AASZc,MAAAA,UAAU,EAAEjB,IAAI,CAACkB;AATL,KAAd;AAWD,GAZD;AAaA,SAAOxB,QAAP;AACD;AAED,OAAO,eAAeyB,cAAf,CAA8B3B,WAA9B,EAA2C4B,YAA3C,EAAyD;AAC9D,QAAMC,IAAI,GAAG,CACX;AACElB,IAAAA,EAAE,EAAEiB,YAAY,CAACjB,EADnB;AAEEE,IAAAA,QAAQ,EAAEe,YAAY,CAACf,QAFzB;AAGEiB,IAAAA,QAAQ,EAAEF,YAAY,CAACE,QAHzB;AAIEC,IAAAA,SAAS,EAAEH,YAAY,CAACG,SAJ1B;AAKEC,IAAAA,KAAK,EAAEJ,YAAY,CAACI,KALtB;AAMEZ,IAAAA,SAAS,EAAEQ,YAAY,CAACR,SAN1B;AAOEE,IAAAA,QAAQ,EAAEM,YAAY,CAACN,QAPzB;AAQEW,IAAAA,YAAY,EAAEL,YAAY,CAACK,YAR7B;AASEP,IAAAA,OAAO,EAAEE,YAAY,CAACF;AATxB,GADW,CAAb;;AAaA,MAAI1B,WAAJ,EAAiB;AACf,UAAMC,GAAG,GAAI,GAAEH,WAAY,IAAGE,WAAY,EAA1C,CADe,CAEf;;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,MAAAA,MAAM,EAAE,KADwB;AAEhCwB,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAF0B,KAAN,CAA5B;AAIA,UAAMvB,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACA,QAAIA,IAAJ,EAAU,OAAO,IAAP;AACV,WAAO,KAAP;AACD,GAVD,MAUO;AACL,UAAML,GAAG,GAAI,GAAEH,WAAY,EAA3B,CADK,CAEL;;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,MAAAA,MAAM,EAAE,MADwB;AAEhCwB,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAF0B,KAAN,CAA5B;AAIA,UAAMvB,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACA,QAAIA,IAAJ,EAAU,OAAO,IAAP;AACV,WAAO,KAAP;AACD;AACF","sourcesContent":["const EmployeeURL = \"https://localhost:44385/api/Employees\";\r\n\r\nexport async function GetEmployee(EmployeeKey) {\r\n  let url = `${EmployeeURL}/${EmployeeKey}`;\r\n  let Employee = [];\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n  });\r\n  let json = await response.json();\r\n  json.map((Main) => {\r\n    Employee.push({\r\n      empId: Main.id,\r\n      empIsActive: Main.isActive,\r\n      empBranchId: Main.Branch,\r\n      empChannelId: Main.channel.id,\r\n      empEmail: Main.empEmail,\r\n      empFirstName: Main.firstName,\r\n      empLastName: Main.lastName,\r\n      empBankerRoleId: Main.bankerRole.id,\r\n      empStaffNo: Main.staffNo,\r\n    });\r\n  });\r\n  return Employee;\r\n}\r\n\r\nexport async function UpdateEmployee(EmployeeKey, EmployeeData) {\r\n  const body = [\r\n    {\r\n      id: EmployeeData.id,\r\n      isActive: EmployeeData.isActive,\r\n      branchId: EmployeeData.branchId,\r\n      channelId: EmployeeData.channelId,\r\n      email: EmployeeData.email,\r\n      firstName: EmployeeData.firstName,\r\n      lastName: EmployeeData.lastName,\r\n      bankerRoleId: EmployeeData.bankerRoleId,\r\n      staffNo: EmployeeData.staffNo,\r\n    },\r\n  ];\r\n  if (EmployeeKey) {\r\n    const url = `${EmployeeURL}/${EmployeeKey}`;\r\n    //create a body to put the info in\r\n    const response = await fetch(url, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    const json = await response.json();\r\n    if (json) return true;\r\n    return false;\r\n  } else {\r\n    const url = `${EmployeeURL}`;\r\n    //create a body to put the info in\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n    });\r\n    const json = await response.json();\r\n    if (json) return true;\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}