{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"E:\\\\TRISTAN\\\\Repos\\\\ReactReferenceData\\\\branches\\\\src\\\\components\\\\BranchEditForm\\\\BranchEditForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetBranch } from \"../../api/Branch\";\nimport PropTypes from \"prop-types\";\nconst {\n  Title\n} = _Typography;\nconst {\n  Option\n} = _Select;\nconst FormItem = _Form.Item;\n\nfunction BranchEditForm(props) {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  const [form] = _Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    //if props id is not null, get the data\n    if (props.id !== 0) setData(GetBranch(props.id));\n  }, [props.id]);\n  useEffect(() => {\n    data.map(x => form.setFieldsValue({\n      channel: x.channelid,\n      branchName: x.BranchName,\n      ParentBranch: x.ParentBranchId,\n      BranchCategory: x.BranchCategoryId,\n      isActive: x.isActive,\n      isPostBox: x.isPostBox,\n      canReceiveSale: x.CanReceiveSale\n    }));\n  }, [data]);\n\n  const gotoAddEmployee = () => {\n    history.push(\"/admin/structure/employee\");\n  };\n\n  const formConfig = {\n    labelCol: {\n      span: 7\n    },\n    name: \"BranchEditForm\",\n    labelAlign: \"left\",\n    form\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 22\n    }\n  };\n  const branchCategoryOptions = [];\n  return /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \" Branch Administration \"))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 20,\n    lg: 17,\n    xl: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form, Object.assign({}, formConfig, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"channel\",\n    label: \"Channel\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select Channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"branchName\",\n    label: \"Branch Name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Sandton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"ParentBranch\",\n    label: \"Parent Branch\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Johannesburg North\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"BranchCategory\",\n    label: \"Branch Category\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select Branch Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, branchCategoryOptions)))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"isActive\",\n    label: \"Is Active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"isPostBox\",\n    label: \"Is PostBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"canReceiveSale\",\n    label: \"Can Receive Sale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(_Button, {\n    htmlType: \"button\",\n    onClick: onReset,\n    style: {\n      margin: \"0 16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Reset\"))))), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \" Add branch or employee \"))), /*#__PURE__*/React.createElement(_Row, {\n    justify: \"\",\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    htmlType: \"button\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"add branch\")), /*#__PURE__*/React.createElement(_Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    htmlType: \"button\",\n    block: true,\n    onClick: gotoAddEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Add employee\")))));\n}\n\nBranchEditForm.prototype = {\n  OnFinish: PropTypes.func.required,\n  id: PropTypes.number.required\n};\nexport default BranchEditForm;","map":{"version":3,"sources":["E:/TRISTAN/Repos/ReactReferenceData/branches/src/components/BranchEditForm/BranchEditForm.js"],"names":["React","useEffect","useState","useHistory","GetBranch","PropTypes","Title","Option","FormItem","Item","BranchEditForm","props","history","data","setData","form","useForm","onReset","resetFields","id","map","x","setFieldsValue","channel","channelid","branchName","BranchName","ParentBranch","ParentBranchId","BranchCategory","BranchCategoryId","isActive","isPostBox","canReceiveSale","CanReceiveSale","gotoAddEmployee","push","formConfig","labelCol","span","name","labelAlign","tailLayout","wrapperCol","offset","branchCategoryOptions","required","margin","prototype","OnFinish","func","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Input,\n  Select,\n  Typography,\n  Form,\n  Switch,\n  Button,\n} from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetBranch } from \"../../api/Branch\";\nimport PropTypes from \"prop-types\";\nconst { Title } = Typography;\nconst { Option } = Select;\nconst FormItem = Form.Item;\n\nfunction BranchEditForm(props) {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [form] = Form.useForm();\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    //if props id is not null, get the data\n    if (props.id !== 0) setData(GetBranch(props.id));\n  }, [props.id]);\n\n  useEffect(() => {\n    data.map((x) =>\n      form.setFieldsValue({\n        channel: x.channelid,\n        branchName: x.BranchName,\n        ParentBranch: x.ParentBranchId,\n        BranchCategory: x.BranchCategoryId,\n        isActive: x.isActive,\n        isPostBox: x.isPostBox,\n        canReceiveSale: x.CanReceiveSale,\n      })\n    );\n  }, [data]);\n  const gotoAddEmployee = () => {\n    history.push(\"/admin/structure/employee\");\n  };\n\n  const formConfig = {\n    labelCol: {\n      span: 7,\n    },\n    name: \"BranchEditForm\",\n    labelAlign: \"left\",\n    form,\n  };\n\n  const tailLayout = {\n    wrapperCol: {\n      offset: 2,\n      span: 22,\n    },\n  };\n\n  const branchCategoryOptions = [];\n\n  return (\n    <Row justify=\"center\">\n      <Col span={24}>\n        <Row>\n          <Col span={12}>\n            <Title level={2}> Branch Administration </Title>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={20} lg={17} xl={17}>\n            <Form {...formConfig}>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"channel\"\n                    label=\"Channel\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select placeholder=\"Select Channel\"></Select>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"branchName\"\n                    label=\"Branch Name\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Sandton\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"ParentBranch\"\n                    label=\"Parent Branch\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"Johannesburg North\" />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem\n                    name=\"BranchCategory\"\n                    label=\"Branch Category\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select placeholder=\"Select Branch Category\">\n                      {branchCategoryOptions}\n                    </Select>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem name=\"isActive\" label=\"Is Active\">\n                    <Switch defaultChecked />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem name=\"isPostBox\" label=\"Is PostBox\">\n                    <Switch />\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={24}>\n                  <FormItem name=\"canReceiveSale\" label=\"Can Receive Sale\">\n                    <Switch />\n                  </FormItem>\n                </Col>\n              </Row>\n              <FormItem {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  htmlType=\"button\"\n                  onClick={onReset}\n                  style={{ margin: \"0 16px\" }}\n                >\n                  Reset\n                </Button>\n              </FormItem>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={12}>\n            <Title level={4}> Add branch or employee </Title>\n          </Col>\n        </Row>\n        <Row justify=\"\" gutter={16}>\n          <Col span={6}>\n            <Button htmlType=\"button\" block>\n              add branch\n            </Button>\n          </Col>\n          <Col span={6}>\n            <Button htmlType=\"button\" block onClick={gotoAddEmployee}>\n              Add employee\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nBranchEditForm.prototype = {\n  OnFinish: PropTypes.func.required,\n  id: PropTypes.number.required,\n};\n\nexport default BranchEditForm;\n"]},"metadata":{},"sourceType":"module"}