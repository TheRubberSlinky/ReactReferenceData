{"version":3,"sources":["Images/nedbank_logo.png","components/Menu/Navigation.js","pages/BankerRoleAdmin/BankerRoleAdmin.js","pages/BranchCategory/BranchCategoryAdmin.js","components/Common/NoData/NoData.js","components/StructureTree/StructureTree.js","components/BranchEditForm/BranchEditForm.js","pages/StructureAdmin/StructureAdmin.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubMenu","Navigation","span","mode","Item","key","to","HomeOutlined","title","SettingOutlined","BranchesOutlined","LockOutlined","BankOutlined","Search","Title","BankerRoleAdmin","useState","searchValue","setSearchValue","searching","employees","setEmployees","columns","dataIndex","render","useEffect","justify","align","level","placeholder","loading","onSearch","value","size","enterButton","spinning","dataSource","BranchCategoryAdmin","branchCategories","setBranchCategories","NoData","props","image","PRESENTED_IMAGE_SIMPLE","description","message","prototype","PropTypes","string","isRequired","Paragraph","StructureTree","treeData","icon","SmileOutlined","children","MehOutlined","selected","FrownFilled","FrownOutlined","searchKey","console","log","className","showIcon","defaultExpandAll","defaultSelectedKeys","switcherIcon","DownOutlined","BranchEditForm","md","lg","xl","StructureAdmin","useRouteMatch","path","url","useHistory","gutter","id","exact","Home","Header","Content","App","src","nedbankLogo","height","width","xs","sm","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bb9e0f8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nedbank_logo.55b4c59a.png\";","import React from 'react';\nimport { Row, Col, Menu } from 'antd';\nimport { HomeOutlined, LockOutlined, BranchesOutlined,BankOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nconst { SubMenu } = Menu;\n\nconst Navigation = () => (\n    <Row>\n        <Col span={24}>\n            <Menu mode={\"horizontal\"}>\n                <Menu.Item key=\"home\">\n                    <Link to=\"/\">\n                        <HomeOutlined /> Home\n                    </Link>\n                </Menu.Item>\n                <SubMenu\n                    title={\n                        <span>\n                            <SettingOutlined /> Admin\n                        </span>\n                    }\n                >\n                    <Menu.Item key=\"admin:structure\">\n                        <Link to=\"/admin/structure\">\n                            <BranchesOutlined /> Structure\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"admin:roles\"> \n                        <Link to=\"/admin/role\">\n                            <LockOutlined /> Roles\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"admin:branchCategory\"> \n                        <Link to=\"/admin/branchcategory\">\n                            <BankOutlined /> Branch Category\n                        </Link>\n                    </Menu.Item>\n                </SubMenu>\n            </Menu>\n        </Col>\n    </Row>\n);\n\nexport default Navigation;","import React, { useEffect, useState }  from 'react';\nimport { Row, Col, Input, Typography,Table, Spin } from 'antd';\nconst { Search } = Input;\nconst { Title } = Typography;\n\n\nfunction BankerRoleAdmin()\n{\n    const [searchValue, setSearchValue] = useState(null);\n    const [searching, setIsSearching] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const columns = [\n        {\n            title: 'Id',\n            dataIndex: 'id',\n            key: 'id',\n          },\n          {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n          },\n          {\n            title: 'Channel',\n            dataIndex: 'channel',\n            key: 'channel'\n          },\n          {\n            title: 'actions',\n            key: 'bankerRole',\n            render:() =>(\n                <span>\n                    <a> Edit </a>\n                </span>\n            )\n          }\n    ]\n\n    useEffect(() => {\n        setEmployees([], [searchValue])\n    })\n\n    function handleSearch(value) {\n        setSearchValue(value)\n    }\n\n\n    return (\n        <Row justify='start' align=\"middle\">\n            <Col span={24}>\n                <Row>\n                    <Col span={12}>\n                        <Title level={2}>Banker Role Admin</Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={8}>\n                        <Search placeholder=\"search\" loading={searching} onSearch={handleSearch} size=\"large\" enterButton />\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col span={24}>\n                        <Spin spinning={searching}>\n                            <Table dataSource={employees} columns={columns} />\n                        </Spin>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default BankerRoleAdmin;","import React, { useEffect, useState }  from 'react';\nimport { Row, Col, Input, Typography,Table, Spin } from 'antd';\nconst { Search } = Input;\nconst { Title } = Typography;\n\nfunction BranchCategoryAdmin()\n{\n    const [searchValue, setSearchValue] = useState(null);\n    const [searching, setIsSearching] = useState(false);\n    const [branchCategories, setBranchCategories] = useState([]);\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'staffNo',\n            key: 'staffNo',\n          },\n          {\n            title: 'Channel',\n            dataIndex: 'fullName',\n            key: 'fullName',\n          },\n          {\n            title: 'actions',\n            key: 'bankerRole',\n            render:() =>(\n                <span>\n                    <a> Edit </a>\n                </span>\n            )\n          }\n    ]\n\n    useEffect(() => {\n        setBranchCategories([], [searchValue])\n    })\n\n    function handleSearch(value) {\n        setSearchValue(value)\n    }\n\n\n    return (\n        <Row justify='start' align=\"middle\">\n            <Col span={24}>\n                <Row>\n                    <Col span={12}>\n                        <Title level={2}> Branch Category Admin </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={8}>\n                        <Search placeholder=\"search\" loading={searching} onSearch={handleSearch} size=\"large\" enterButton />\n                    </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col span={24}>\n                        <Spin spinning={searching}>\n                            <Table dataSource={branchCategories} columns={columns} />\n                        </Spin>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default BranchCategoryAdmin;","import React  from 'react';\nimport { Empty } from 'antd';\nimport PropTypes from \"prop-types\";\n\nconst NoData = (props) => {\n    return (\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={props.message}\n        />\n    )\n}\n\nNoData.prototype = {\n    message: PropTypes.string.isRequired\n};\n\nexport default NoData;","import React, { useEffect, useState }  from 'react';\nimport { Tree, Row, Col,Input,Typography } from 'antd';\nimport { DownOutlined, FrownOutlined, SmileOutlined, MehOutlined, FrownFilled,} from '@ant-design/icons';\nconst { Search } = Input;\nconst { Paragraph } = Typography;\n\nfunction StructureTree()\n{\n  const [searching, setIsSearching] = useState(false);\n  const treeData = [\n    {\n      title: 'parent 1',\n      key: '0-0',\n      icon: <SmileOutlined />,\n      children: [\n        {\n          title: 'leaf',\n          key: '0-0-0',\n          icon: <MehOutlined />,\n        },\n        {\n          title: 'leaf',\n          key: '0-0-1',\n          icon: ({ selected }) => (selected ? <FrownFilled /> : <FrownOutlined />),\n        },\n      ],\n    },\n    {\n      title: 'parent 2',\n      key: '1-0',\n      icon: <SmileOutlined />,\n      children: []\n    }\n  ];\n\n  function handleSearch(searchKey){\n    console.log(searchKey);\n  }\n\n  return (\n    <Row justify=\"space-between\">\n      <Col span={24}>\n        <Row>\n          <Col span={16}>\n            <Search placeholder=\"search\" loading={searching} onSearch={handleSearch} enterButton />\n          </Col>\n          <Col span={16}>\n              <Paragraph className=\"light-text \">\n                  Enter a branch name or code OR enter an employee surname OR staff number\n              </Paragraph>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Tree\n              showIcon\n              defaultExpandAll\n              defaultSelectedKeys={[]}\n              switcherIcon={<DownOutlined />}\n              treeData={treeData}\n            />\n          </Col>\n        </Row>\n        \n      </Col>\n    </Row>\n  )\n}\n\nexport default StructureTree;","import React, { useEffect, useState }  from 'react';\nimport { Row, Col, Input, Typography,Table, Spin } from 'antd';\nimport Form from 'antd/lib/form/Form';\nconst { Title } = Typography;\n\nfunction BranchEditForm()\n{\n\n\n    return (\n        <Row justify=\"center\">\n            <Col span={24}>\n                <Row>\n                    <Col span={12}>\n                        <Title level={2}> Branch Administration  </Title>\n                    </Col>\n                </Row>\n                <Row justify=\"center\">\n                    <Col md={24} lg={20} xl={20}>\n                        <Form>\n                            \n                        </Form>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default BranchEditForm","import React, { useEffect, useState }  from 'react';\nimport { BrowserRouter as Router,  Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { Row, Col} from 'antd';\nimport NoData from '../../components/Common/NoData/NoData'\nimport StructureTree from '../../components/StructureTree/StructureTree';\nimport BranchEditForm from '../../components/BranchEditForm/BranchEditForm';\n\n\nfunction StructureAdmin()\n{\n    let { path, url } = useRouteMatch();\n    const history = useHistory();\n\n    return (\n        <Row justify=\"start\">\n            <Col span={24}>\n                <Row gutter={8}>\n                    <Col span={8} id=\"tree search\">\n                        <StructureTree />\n                    </Col>\n                    <Col span={14}>\n                    <Switch>\n                        <Route exact path={path}>\n                            <NoData message=\"Please select a node from the tree structure\" />\n                        </Route>\n                        <Route path={`${path}/branch`}>\n                            <BranchEditForm />\n                        </Route>\n                        <Route path={`${path}/employee`}>\n                            <BranchEditForm />\n                        </Route>\n                    </Switch>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default StructureAdmin;","import React, { useEffect, useState }  from 'react';\nimport { Row, Col, Input, Typography,Table, Spin } from 'antd';\nconst { Title } = Typography;\n\nfunction Home(){\n    return (\n        <Row justify=\"center\">\n            <Col span={24}>\n                <Row>\n                    <Col span={12}>\n                        <Title level={2}> Home </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={12}>\n                    </Col>\n                    <Col span={12}>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Home;","import React, { useState }  from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport Navigation from './components/Menu/Navigation';\nimport nedbankLogo from './Images/nedbank_logo.png';\nimport BankerRoleAdmin from './pages/BankerRoleAdmin/BankerRoleAdmin';\nimport BranchCategoryAdmin from './pages/BranchCategory/BranchCategoryAdmin';\nimport StructureAdmin from './pages/StructureAdmin/StructureAdmin';\nimport Home from './pages/Home/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nconst { Header, Content  } = Layout;\n\nfunction App(){\n\n  const [isLoading, setLoading] = useState(false);\n\n\n  return (\n    <Layout>\n        <Header className=\"app-header\">\n          <img src={nedbankLogo} height={50} width={100} />\n        </Header>\n        <Content className=\"app-content\">\n          <Router>\n              <Row>\n                <Col span={24}>\n                  <Navigation />\n                </Col>\n              </Row>\n              <br/>\n              <Row justify='center'>\n                <Col xs={24} sm={24} md={24} lg={22} xl={22}>\n                  <Switch>\n                      <Route path=\"/admin/role\">\n                        <BankerRoleAdmin />\n                      </Route>\n                      <Route path=\"/admin/branchcategory\">\n                        <BranchCategoryAdmin />\n                      </Route>\n                      <Route path=\"/admin/structure\">\n                        <StructureAdmin />\n                      </Route>\n                      <Route path=\"/home\">\n                        <Home />\n                      </Route>\n                      <Route path=\"/\">\n                        <Home />\n                      </Route>\n                  </Switch>\n                </Col>\n              </Row>\n          </Router>\n        </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}