{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\CoverComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Demo } from \"./AntTree\";\nimport { GeneralDisplayPage } from \"./GeneralManage\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nconst onClickBranch = value => {\n  setKeySelected({\n    key: '',\n    isEdit: false,\n    type: 'Branch'\n  });\n};\n\nconst onClickEmployee = value => {\n  setKeySelected({\n    key: '',\n    isEdit: false,\n    type: 'Branch'\n  });\n};\n\nfunction CoverPage() {\n  const _useState = useState({\n    key: '1',\n    isEdit: true,\n    type: 'Branch'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        KeySelected = _useState2[0],\n        setKeySelected = _useState2[1];\n\n  useEffect(() => {}, [KeySelected]);\n\n  const onChange = selectedKeys => {\n    if (selectedKeys[0] !== undefined) setKeySelected({\n      key: selectedKeys[0],\n      isEdit: true,\n      type: selectedKeys[0].split(',')[1] === 'B' ? 'Branch' : 'Employee'\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Hunting 2.0!\"), \"add Tree here\", React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Demo, {\n    mySelect: onChange,\n    EmpClick: onClickEmployee,\n    BraClick: onClickBranch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GeneralDisplayPage, {\n    GenKey: KeySelected.key,\n    isEdit: KeySelected.isEdit,\n    type: KeySelected.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n}\n\nexport default CoverPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\CoverComponent.js"],"names":["React","useState","useEffect","Demo","GeneralDisplayPage","Link","loadCourses","deleteCourse","onClickBranch","value","setKeySelected","key","isEdit","type","onClickEmployee","CoverPage","KeySelected","onChange","selectedKeys","undefined","split"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAAQC,kBAAR,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,cAAc,CAAC;AAACC,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,MAAM,EAAE,KAAlB;AACfC,IAAAA,IAAI,EAAE;AADS,GAAD,CAAd;AAEH,CAHD;;AAIA,MAAMC,eAAe,GAAIL,KAAD,IAAW;AAC/BC,EAAAA,cAAc,CAAC;AAACC,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,MAAM,EAAE,KAAlB;AACfC,IAAAA,IAAI,EAAE;AADS,GAAD,CAAd;AAEH,CAHD;;AAIA,SAASE,SAAT,GAAqB;AAAA,oBACmBd,QAAQ,CAAC;AAC7CU,IAAAA,GAAG,EAAE,GADwC;AAE7CC,IAAAA,MAAM,EAAE,IAFqC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAD,CAD3B;AAAA;AAAA,QACZG,WADY;AAAA,QACCN,cADD;;AAOnBR,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACc,WAAD,CAFM,CAAT;;AAKA,QAAMC,QAAQ,GAAIC,YAAD,IAAkB;AAC/B,QAAGA,YAAY,CAAC,CAAD,CAAZ,KAAoBC,SAAvB,EACFT,cAAc,CAAC;AAACC,MAAAA,GAAG,EAAEO,YAAY,CAAC,CAAD,CAAlB;AAAuBN,MAAAA,MAAM,EAAE,IAA/B;AACXC,MAAAA,IAAI,EAAEK,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,MAAkC,GAAlC,GAAwC,QAAxC,GAAkD;AAD7C,KAAD,CAAd;AAED,GAJD;;AAMA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,mBAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAA0B,IAAA,QAAQ,EAAEH,eAApC;AAAqD,IAAA,QAAQ,EAAEN,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CADA,EAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAAC,kBAAD;AAAoB,IAAA,MAAM,EAAEQ,WAAW,CAACL,GAAxC;AAA6C,IAAA,MAAM,EAAEK,WAAW,CAACJ,MAAjE;AAAyE,IAAA,IAAI,EAAEI,WAAW,CAACH,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAFA,CAHF,CADF;AAUD;;AAED,eAAeE,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Demo} from \"./AntTree\";\r\nimport {GeneralDisplayPage} from \"./GeneralManage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\n\r\nconst onClickBranch = (value) => {\r\n    setKeySelected({key: '', isEdit: false,\r\n    type: 'Branch'});\r\n};\r\nconst onClickEmployee = (value) => {\r\n    setKeySelected({key: '', isEdit: false,\r\n    type: 'Branch'});\r\n};\r\nfunction CoverPage() {\r\n  const [KeySelected, setKeySelected] = useState({\r\n    key: '1',\r\n    isEdit: true,\r\n    type: 'Branch'\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n  }, [KeySelected]);\r\n\r\n\r\n  const onChange = (selectedKeys) => {\r\n      if(selectedKeys[0] !== undefined)\r\n    setKeySelected({key: selectedKeys[0], isEdit: true,\r\n        type: selectedKeys[0].split(',')[1] === 'B' ? 'Branch': 'Employee'});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Hunting 2.0!</h2>\r\n      add Tree here\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6\"><Demo mySelect={onChange} EmpClick={onClickEmployee} BraClick={onClickBranch}/></div>\r\n      <div className=\"col-md-6\"><GeneralDisplayPage GenKey={KeySelected.key} isEdit={KeySelected.isEdit} type={KeySelected.type}/></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoverPage;\r\n"]},"metadata":{},"sourceType":"module"}