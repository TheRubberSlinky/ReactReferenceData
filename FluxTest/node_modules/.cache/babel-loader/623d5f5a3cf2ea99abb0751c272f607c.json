{"ast":null,"code":"const baseTree = [{\n  title: \"Branch1\",\n  key: \"1\",\n  isLeaf: false\n}, {\n  title: \"Branch2\",\n  key: \"2\",\n  isLeaf: false\n}, {\n  title: \"Branch3\",\n  key: \"3\",\n  isLeaf: false\n}, {\n  title: \"Branch4\",\n  key: \"4\",\n  isLeaf: false\n}];\nconst TreeKids = [{\n  title: \"Employee1\",\n  Parent: '1',\n  key: '1-1',\n  isLeaf: true\n}, {\n  title: \"Employee2\",\n  Parent: '1',\n  key: \"1-2\",\n  isLeaf: true\n}, {\n  title: \"Employee3\",\n  Parent: '1',\n  key: \"1-3\",\n  isLeaf: true\n}, {\n  title: \"Employee4\",\n  Parent: '2',\n  key: \"2-4\",\n  isLeaf: true\n}, {\n  title: \"Employee5\",\n  Parent: '2',\n  key: \"2-5\",\n  isLeaf: true\n}, {\n  title: \"Employee6\",\n  Parent: '4',\n  key: \"4-6\",\n  isLeaf: true\n}, {\n  title: \"Employee7\",\n  Parent: '4',\n  key: \"4-7\",\n  isLeaf: true\n}];\nconst Employees = [{\n  key: 1,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc309921'\n  }, {\n    name: 'EmployeeName',\n    value: 'Tristan'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'Donovan'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '9610225060083'\n  }, {\n    name: 'EmployeeBranch',\n    value: 182\n  }]\n}, {\n  key: 2,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc302066'\n  }, {\n    name: 'EmployeeName',\n    value: 'mulalo'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'mudao'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '5678341290875'\n  }, {\n    name: 'EmployeeBranch',\n    value: 77\n  }]\n}, {\n  key: 3,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc059873'\n  }, {\n    name: 'EmployeeName',\n    value: 'herman'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'Nel motors'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '45838489684353'\n  }, {\n    name: 'EmployeeBranch',\n    value: 57\n  }]\n}, {\n  key: 4,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc034568'\n  }, {\n    name: 'EmployeeName',\n    value: 'Louis'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'Armstrong'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '2348794835435'\n  }, {\n    name: 'EmployeeBranch',\n    value: 57\n  }]\n}, {\n  key: 5,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc284564'\n  }, {\n    name: 'EmployeeName',\n    value: 'Tiisetso'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'smith'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '4538963578493543'\n  }, {\n    name: 'EmployeeBranch',\n    value: 57\n  }]\n}, {\n  key: 6,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc309921'\n  }, {\n    name: 'EmployeeName',\n    value: 'Mark'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'Holloway'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '345864839579843'\n  }, {\n    name: 'EmployeeBranch',\n    value: 57\n  }]\n}, {\n  key: 7,\n  data: [{\n    name: 'EmployeeNumber',\n    value: 'cc485647'\n  }, {\n    name: 'EmployeeName',\n    value: 'michael'\n  }, {\n    name: 'EmployeeSurname',\n    value: 'Jordan'\n  }, {\n    name: 'EmployeeLastLoggedIn',\n    value: '2020-03-12'\n  }, {\n    name: 'EmployeeID',\n    value: '3495867583464'\n  }, {\n    name: 'EmployeeBranch',\n    value: 57\n  }]\n}];\nexport function GetTreeData(Key) {\n  //let obj = JSON.parse(test);\n  //const result = obj.filter(x => x);\n  return baseTree;\n}\n;\nexport function GetTreeChildren(parentKey) {\n  //debugger;\n  return TreeKids.filter(x => x.Parent === parentKey);\n}\n;\nexport function GetGenericDataWithKey(DataKey) {}","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\MockData.js"],"names":["baseTree","title","key","isLeaf","TreeKids","Parent","Employees","data","name","value","GetTreeData","Key","GetTreeChildren","parentKey","filter","x","GetGenericDataWithKey","DataKey"],"mappings":"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","sourcesContent":["\r\n\r\nconst baseTree = [\r\n{title: \"Branch1\", key: \"1\", isLeaf: false},\r\n{title: \"Branch2\", key: \"2\", isLeaf: false},\r\n{title: \"Branch3\", key: \"3\", isLeaf: false},\r\n{title: \"Branch4\", key: \"4\", isLeaf: false},];\r\n\r\nconst TreeKids = [\r\n{title: \"Employee1\", Parent: '1', key: '1-1', isLeaf: true},\r\n{title: \"Employee2\", Parent: '1', key: \"1-2\", isLeaf: true},\r\n{title: \"Employee3\", Parent: '1', key: \"1-3\", isLeaf: true},\r\n{title: \"Employee4\", Parent: '2', key: \"2-4\", isLeaf: true},\r\n{title: \"Employee5\", Parent: '2', key: \"2-5\", isLeaf: true},\r\n{title: \"Employee6\", Parent: '4', key: \"4-6\", isLeaf: true},\r\n{title: \"Employee7\", Parent: '4', key: \"4-7\", isLeaf: true}]\r\n\r\n\r\nconst Employees: GenericLoadData[] = [\r\n    {\r\n      key: 1,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc309921',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'Tristan',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'Donovan',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '9610225060083',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 182,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 2,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc302066',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'mulalo',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'mudao',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '5678341290875',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 77,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 3,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc059873',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'herman',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'Nel motors',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '45838489684353',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 57,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 4,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc034568',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'Louis',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'Armstrong',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '2348794835435',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 57,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 5,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc284564',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'Tiisetso',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'smith',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '4538963578493543',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 57,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 6,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc309921',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'Mark',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'Holloway',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '345864839579843',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 57,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 7,\r\n      data: [\r\n        {\r\n          name: 'EmployeeNumber',\r\n          value: 'cc485647',\r\n        },\r\n        {\r\n          name: 'EmployeeName',\r\n          value: 'michael',\r\n        },\r\n        {\r\n          name: 'EmployeeSurname',\r\n          value: 'Jordan',\r\n        },\r\n        {\r\n          name: 'EmployeeLastLoggedIn',\r\n          value: '2020-03-12',\r\n        },\r\n        {\r\n          name: 'EmployeeID',\r\n          value: '3495867583464',\r\n        },\r\n        {\r\n          name: 'EmployeeBranch',\r\n          value: 57,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n\r\nexport function GetTreeData(Key) {\r\n    //let obj = JSON.parse(test);\r\n    \r\n    //const result = obj.filter(x => x);\r\n    return baseTree;\r\n};\r\nexport function GetTreeChildren(parentKey){\r\n    //debugger;\r\n    return TreeKids.filter(x => x.Parent === parentKey);\r\n};\r\n\r\nexport function GetGenericDataWithKey(DataKey){\r\n\r\n}"]},"metadata":{},"sourceType":"module"}