{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\GeneralManage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSpecificEmployeeByKey, getSpecificBranchByKey } from './MockData';\nexport function GeneralDisplayPage(props) {\n  const _useState = useState([{\n    key: \"0\",\n    data: [{\n      name: '',\n      value: ''\n    }]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    //setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\n    let splt = props.GenKey.split(':');\n\n    switch (splt[0]) {\n      case 'L':\n      case 'B':\n        setData(getSpecificBranchByKey(splt[1]));\n        break;\n\n      case 'E':\n        setData(getSpecificEmployeeByKey(splt[1]));\n        break;\n\n      default:\n        break;\n    }\n  }, [props.GenKey]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, Data.map(memes => {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, memes.key), memes.data.map(Values => {\n      return React.createElement(\"li\", {\n        key: Values.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, Values.name)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, Values.value));\n    }));\n  }));\n}\nGeneralDisplayPage.propTypes = {\n  GenKey: PropTypes.string.isRequired\n};\nexport default GeneralDisplayPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\GeneralManage.js"],"names":["React","useState","useEffect","PropTypes","getSpecificEmployeeByKey","getSpecificBranchByKey","GeneralDisplayPage","props","key","data","name","value","Data","setData","splt","GenKey","split","map","memes","Values","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,wBAAR,EAAkCC,sBAAlC,QAA+D,YAA/D;AAGA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,oBACdN,QAAQ,CAAC,CAAC;AAACO,IAAAA,GAAG,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAD;AAAjB,GAAD,CAAD,CADM;AAAA;AAAA,QAC/BC,IAD+B;AAAA,QACzBC,OADyB;;AAGtCX,EAAAA,SAAS,CAAC,MAAM;AACV;AAEJ,QAAIY,IAAI,GAAGP,KAAK,CAACQ,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAAX;;AAEA,YAAQF,IAAI,CAAC,CAAD,CAAZ;AACE,WAAK,GAAL;AACA,WAAK,GAAL;AACID,QAAAA,OAAO,CAACR,sBAAsB,CAACS,IAAI,CAAC,CAAD,CAAL,CAAvB,CAAP;AACA;;AACJ,WAAK,GAAL;AACID,QAAAA,OAAO,CAACT,wBAAwB,CAACU,IAAI,CAAC,CAAD,CAAL,CAAzB,CAAP;AACF;;AACA;AACC;AATL;AAWD,GAhBQ,EAgBN,CAACP,KAAK,CAACQ,MAAP,CAhBM,CAAT;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,IAAI,CAACK,GAAL,CAASC,KAAK,IAAI;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACV,GAAX,CADG,EAEFU,KAAK,CAACT,IAAN,CAAWQ,GAAX,CAAeE,MAAM,IAAI;AACtB,aACI;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACT,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIS,MAAM,CAACT,IAAX,CAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIS,MAAM,CAACR,KAAX,CAFJ,CADJ;AAMH,KAPA,CAFE,CAAP;AAWH,GAZA,CADD,CADJ;AAiBH;AAGDL,kBAAkB,CAACc,SAAnB,GAA+B;AAC3BL,EAAAA,MAAM,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC;AADE,CAA/B;AAIE,eAAehB,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getSpecificEmployeeByKey, getSpecificBranchByKey} from './MockData'\r\n\r\n\r\nexport function GeneralDisplayPage(props) {\r\n    const [Data, setData] = useState([{key: \"0\", data: [{name: '', value: ''}]}]);\r\n    \r\n    useEffect(() => {\r\n          //setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\r\n        \r\n      let splt = props.GenKey.split(':');\r\n\r\n      switch (splt[0]) {\r\n        case 'L':\r\n        case 'B':\r\n            setData(getSpecificBranchByKey(splt[1]));\r\n            break;\r\n        case 'E':\r\n            setData(getSpecificEmployeeByKey(splt[1]));\r\n          break;\r\n          default:\r\n           break;\r\n      }\r\n    }, [props.GenKey]);\r\n    return (\r\n        <div>\r\n        {Data.map(memes => {\r\n            return(<ul>\r\n                <h2>{memes.key}</h2>\r\n                {memes.data.map(Values => {\r\n                    return(\r\n                        <li key={Values.name}>\r\n                            <p><b>{Values.name}</b></p>\r\n                            <p>{Values.value}</p>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>);\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nGeneralDisplayPage.propTypes = {\r\n    GenKey: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default GeneralDisplayPage;"]},"metadata":{},"sourceType":"module"}