{"ast":null,"code":"import _objectSpread from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\GeneralManage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport 'antd/dist/antd.css';\nimport { Form, Input, InputNumber, Button } from 'antd';\nimport { getSpecificEmployeeByKey, getSpecificBranchByKey } from './MockData';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\nexport function GeneralDisplayPage(props) {\n  const _useState = useState([{\n    key: \"0\",\n    data: [{\n      name: '',\n      value: ''\n    }]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    if (props.GenKey !== undefined) {\n      let splt = props.GenKey.split(',');\n\n      switch (splt[splt.length - 1]) {\n        case 'L':\n        case 'B':\n          break;\n\n        case 'E':\n          setData(getSpecificEmployeeByKey(splt[0]));\n          break;\n\n        default:\n          setData(getSpecificBranchByKey(splt[0]));\n          break;\n      }\n    }\n  }, [props.GenKey]);\n  return React.createElement(Form, Object.assign({}, layout, {\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    name: ['user', 'name'],\n    label: \"Name\",\n    rules: [{\n      required: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'email'],\n    label: \"Email\",\n    rules: [{\n      type: 'email'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'age'],\n    label: \"Age\",\n    rules: [{\n      type: 'number',\n      min: 0,\n      max: 99\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(InputNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'website'],\n    label: \"Website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    name: ['user', 'introduction'],\n    label: \"Introduction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    wrapperCol: _objectSpread({}, layout.wrapperCol, {\n      offset: 8\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Submit\"))) // <div>\n  // {Data.map(memes => {\n  //     return(<form>\n  //         <h2>{memes.key}</h2>\n  //         {memes.data.map(Values => {\n  //             return(\n  //                 <li key={`${memes.key}${Values.name}`}>\n  //                     <p><b>{Values.name}</b></p>\n  //                     <p>{Values.value}</p>\n  //                 </li>\n  //             );\n  //         })}\n  //         </form>\n  //     );\n  // })}\n  // </div>\n  ;\n}\nGeneralDisplayPage.propTypes = {\n  GenKey: PropTypes.string.isRequired\n};\nexport default GeneralDisplayPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\GeneralManage.js"],"names":["React","useState","useEffect","PropTypes","Form","Input","InputNumber","Button","getSpecificEmployeeByKey","getSpecificBranchByKey","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","GeneralDisplayPage","props","key","data","name","value","Data","setData","GenKey","undefined","splt","split","length","onFinish","type","min","max","offset","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, InputNumber, Button } from 'antd';\r\n\r\nimport {getSpecificEmployeeByKey, getSpecificBranchByKey} from './MockData'\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const validateMessages = {\r\n    required: 'This field is required!',\r\n    types: {\r\n      email: 'Not a validate email!',\r\n      number: 'Not a validate number!',\r\n    },\r\n    number: {\r\n      range: 'Must be between ${min} and ${max}',\r\n    },\r\n  };\r\n\r\nexport function GeneralDisplayPage(props) {\r\n    const [Data, setData] = useState([{key: \"0\", data: [{name: '', value: ''}]}]);\r\n    \r\n    useEffect(() => {\r\n        if(props.GenKey !== undefined)\r\n        {\r\n      let splt = props.GenKey.split(',');\r\n      switch (splt[splt.length - 1]) {\r\n        case 'L':\r\n        case 'B':\r\n            break;\r\n        case 'E':\r\n            setData(getSpecificEmployeeByKey(splt[0]));\r\n          break;\r\n          default:\r\n            setData(getSpecificBranchByKey(splt[0]));\r\n           break;\r\n      }\r\n    }}, [props.GenKey]);\r\n    return (\r\n<Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name={['user', 'name']}\r\n        label=\"Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'email']}\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'age']}\r\n        label=\"Age\"\r\n        rules={[\r\n          {\r\n            type: 'number',\r\n            min: 0,\r\n            max: 99,\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'website']} label=\"Website\">\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'introduction']} label=\"Introduction\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n\r\n        // <div>\r\n        // {Data.map(memes => {\r\n        //     return(<form>\r\n        //         <h2>{memes.key}</h2>\r\n        //         {memes.data.map(Values => {\r\n        //             return(\r\n        //                 <li key={`${memes.key}${Values.name}`}>\r\n        //                     <p><b>{Values.name}</b></p>\r\n        //                     <p>{Values.value}</p>\r\n        //                 </li>\r\n        //             );\r\n        //         })}\r\n        //         </form>\r\n        //     );\r\n        // })}\r\n        // </div>\r\n    );\r\n}\r\n\r\n\r\nGeneralDisplayPage.propTypes = {\r\n    GenKey: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default GeneralDisplayPage;"]},"metadata":{},"sourceType":"module"}