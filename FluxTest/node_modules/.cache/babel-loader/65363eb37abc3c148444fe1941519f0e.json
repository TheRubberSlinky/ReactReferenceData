{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\GeneralManage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSpecificEmployeeByKey } from './MockData';\nexport function GeneralDisplayPage(props) {\n  const _useState = useState([{\n    key: \"0\",\n    data: [{\n      name: '',\n      value: ''\n    }]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {//setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\n    //setData(getSpecificEmployeeByKey(props.GenKey));\n    //   switch (props.GenKey) {\n    //     case 'Locale':\n    //     case 'Branch':\n    //     case 'Employee':\n    //       GetSpecificEmployee();\n    //       break;\n    //       default:\n    //        break;\n    //   }\n  }, [props.GenKey]);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, Data[0].key);\n}\nGeneralDisplayPage.propTypes = {\n  GenKey: PropTypes.string.isRequired\n};\nexport default GeneralDisplayPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\GeneralManage.js"],"names":["React","useState","useEffect","PropTypes","getSpecificEmployeeByKey","GeneralDisplayPage","props","key","data","name","value","Data","setData","GenKey","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,wBAAR,QAAuC,YAAvC;AAGA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,oBACdL,QAAQ,CAAC,CAAC;AAACM,IAAAA,GAAG,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAD;AAAjB,GAAD,CAAD,CADM;AAAA;AAAA,QAC/BC,IAD+B;AAAA,QACzBC,OADyB;;AAGtCV,EAAAA,SAAS,CAAC,MAAM,CACV;AACF;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAdQ,EAcN,CAACI,KAAK,CAACO,MAAP,CAdM,CAAT;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,IAAI,CAAC,CAAD,CAAJ,CAAQJ,GAFX,CADF;AAiBH;AAGDF,kBAAkB,CAACS,SAAnB,GAA+B;AAC3BD,EAAAA,MAAM,EAAEV,SAAS,CAACY,MAAV,CAAiBC;AADE,CAA/B;AAIE,eAAeX,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getSpecificEmployeeByKey} from './MockData'\r\n\r\n\r\nexport function GeneralDisplayPage(props) {\r\n    const [Data, setData] = useState([{key: \"0\", data: [{name: '', value: ''}]}]);\r\n    \r\n    useEffect(() => {\r\n          //setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\r\n        //setData(getSpecificEmployeeByKey(props.GenKey));\r\n      \r\n\r\n    //   switch (props.GenKey) {\r\n    //     case 'Locale':\r\n    //     case 'Branch':\r\n    //     case 'Employee':\r\n    //       GetSpecificEmployee();\r\n    //       break;\r\n    //       default:\r\n    //        break;\r\n    //   }\r\n    }, [props.GenKey]);\r\n    return (\r\n      <ul\r\n      >\r\n        {Data[0].key}\r\n        {/* {Data[0].Data.map(Values => (\r\n          <li\r\n            key={Values.name}\r\n          >\r\n            <p>{Values.name}</p>\r\n            <input value={Values.value} />\r\n          </li>\r\n        ))} */}\r\n      </ul>\r\n    );\r\n\r\n    \r\n  \r\n}\r\n\r\n\r\nGeneralDisplayPage.propTypes = {\r\n    GenKey: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default GeneralDisplayPage;"]},"metadata":{},"sourceType":"module"}