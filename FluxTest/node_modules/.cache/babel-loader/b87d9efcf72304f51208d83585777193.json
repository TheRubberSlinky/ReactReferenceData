{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\GeneralManage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSpecificEmployeeByKey } from './MockData';\nexport function GeneralDisplayPage(props) {\n  const _useState = useState(['yes']),\n        _useState2 = _slicedToArray(_useState, 2),\n        Data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    const GetSpecificEmployee = async () => {\n      setData((await getSpecificEmployeeByKey(props.GenKey[0])));\n    };\n\n    switch (props.GenKey[0]) {\n      case 'Locale':\n      case 'Branch':\n      case 'Employee':\n        GetSpecificEmployee();\n        break;\n\n      default:\n        break;\n    }\n  }, [props.GenKey]);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, Data.data.map(Values => React.createElement(\"li\", {\n    key: Values.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Values.name), React.createElement(\"input\", {\n    value: Values.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\nGeneralDisplayPage.propTypes = {\n  GenKey: PropTypes.string.isRequired,\n  courses: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    authorId: PropTypes.number.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default GeneralDisplayPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\GeneralManage.js"],"names":["React","useState","useEffect","PropTypes","getSpecificEmployeeByKey","GeneralDisplayPage","props","Data","setData","GetSpecificEmployee","GenKey","data","map","Values","name","value","propTypes","string","isRequired","courses","arrayOf","shape","id","number","title","authorId","category"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,wBAAR,QAAuC,YAAvC;AAGA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,oBACdL,QAAQ,CAAC,CAAC,KAAD,CAAD,CADM;AAAA;AAAA,QAC/BM,IAD+B;AAAA,QACzBC,OADyB;;AAGtCN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,mBAAmB,GAAG,YAAY;AACtCD,MAAAA,OAAO,EAAC,MAAMJ,wBAAwB,CAACE,KAAK,CAACI,MAAN,CAAa,CAAb,CAAD,CAA/B,EAAP;AACD,KAFD;;AAIA,YAAQJ,KAAK,CAACI,MAAN,CAAa,CAAb,CAAR;AACE,WAAK,QAAL;AACA,WAAK,QAAL;AACA,WAAK,UAAL;AACED,QAAAA,mBAAmB;AACnB;;AACA;AACC;AAPL;AASD,GAdQ,EAcN,CAACH,KAAK,CAACI,MAAP,CAdM,CAAT;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGH,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAcC,MAAM,IACnB;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,IADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,MAAM,CAACC,IAAX,CAHF,EAIE;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CAHH,CADF;AAiBH;AAGDV,kBAAkB,CAACW,SAAnB,GAA+B;AAC3BN,EAAAA,MAAM,EAAEP,SAAS,CAACc,MAAV,CAAiBC,UADE;AAE3BC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,OAAV,CACPjB,SAAS,CAACkB,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEnB,SAAS,CAACoB,MAAV,CAAiBL,UADP;AAEdM,IAAAA,KAAK,EAAErB,SAAS,CAACc,MAAV,CAAiBC,UAFV;AAGdO,IAAAA,QAAQ,EAAEtB,SAAS,CAACoB,MAAV,CAAiBL,UAHb;AAIdQ,IAAAA,QAAQ,EAAEvB,SAAS,CAACc,MAAV,CAAiBC;AAJb,GAAhB,CADO,EAOPA;AATyB,CAA/B;AAYE,eAAeb,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getSpecificEmployeeByKey} from './MockData'\r\n\r\n\r\nexport function GeneralDisplayPage(props) {\r\n    const [Data, setData] = useState(['yes']);\r\n    \r\n    useEffect(() => {\r\n      const GetSpecificEmployee = async () => {\r\n        setData(await getSpecificEmployeeByKey(props.GenKey[0]));\r\n      };\r\n\r\n      switch (props.GenKey[0]) {\r\n        case 'Locale':\r\n        case 'Branch':\r\n        case 'Employee':\r\n          GetSpecificEmployee();\r\n          break;\r\n          default:\r\n           break;\r\n      }\r\n    }, [props.GenKey]);\r\n    return (\r\n      <ul\r\n      >\r\n        {/* {Data[0]} */}\r\n        {Data.data.map(Values => (\r\n          <li\r\n            key={Values.name}\r\n          >\r\n            <p>{Values.name}</p>\r\n            <input value={Values.value} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n    \r\n  \r\n}\r\n\r\n\r\nGeneralDisplayPage.propTypes = {\r\n    GenKey: PropTypes.string.isRequired,\r\n    courses: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        authorId: PropTypes.number.isRequired,\r\n        category: PropTypes.string.isRequired\r\n      })\r\n    ).isRequired\r\n  };\r\n\r\n  export default GeneralDisplayPage;"]},"metadata":{},"sourceType":"module"}