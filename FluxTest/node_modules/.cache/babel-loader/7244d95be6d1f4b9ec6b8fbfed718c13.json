{"ast":null,"code":"import axios from \"axios\";\nconst baseTree = [{\n  title: \"Branch1\",\n  key: \"1\",\n  isLeaf: false\n}, {\n  title: \"Branch2\",\n  key: \"2\",\n  isLeaf: false\n}, {\n  title: \"Branch3\",\n  key: \"3\",\n  isLeaf: false\n}, {\n  title: \"Branch4\",\n  key: \"4\",\n  isLeaf: false\n}];\nconst TreeKids = [{\n  title: \"cc309921\",\n  Parent: \"1\",\n  key: \"cc309921\",\n  isLeaf: true\n}, {\n  title: \"cc302066\",\n  Parent: \"1\",\n  key: \"cc302066\",\n  isLeaf: true\n}, {\n  title: \"cc059873\",\n  Parent: \"1\",\n  key: \"cc059873\",\n  isLeaf: true\n}, {\n  title: \"cc034568\",\n  Parent: \"2\",\n  key: \"cc034568\",\n  isLeaf: true\n}, {\n  title: \"cc284564\",\n  Parent: \"2\",\n  key: \"cc284564\",\n  isLeaf: true\n}, {\n  title: \"cc502365\",\n  Parent: \"4\",\n  key: \"cc502365\",\n  isLeaf: true\n}, {\n  title: \"cc485647\",\n  Parent: \"4\",\n  key: \"cc485647\",\n  isLeaf: true\n}];\nconst Employees = [{\n  key: \"cc309921\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc309921\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"Tristan\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"Donovan\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"9610225060083\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 182\n  }]\n}, {\n  key: \"cc302066\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc302066\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"mulalo\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"mudao\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"5678341290875\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 77\n  }]\n}, {\n  key: \"cc059873\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc059873\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"herman\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"Nel motors\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"45838489684353\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 57\n  }]\n}, {\n  key: \"cc034568\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc034568\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"Louis\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"Armstrong\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"2348794835435\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 57\n  }]\n}, {\n  key: \"cc284564\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc284564\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"Tiisetso\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"smith\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"4538963578493543\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 57\n  }]\n}, {\n  key: \"cc502365\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc502365\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"Mark\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"Holloway\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"345864839579843\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 57\n  }]\n}, {\n  key: \"cc485647\",\n  data: [{\n    name: \"EmployeeNumber\",\n    value: \"cc485647\"\n  }, {\n    name: \"EmployeeName\",\n    value: \"michael\"\n  }, {\n    name: \"EmployeeSurname\",\n    value: \"Jordan\"\n  }, {\n    name: \"EmployeeLastLoggedIn\",\n    value: \"2020-03-12\"\n  }, {\n    name: \"EmployeeID\",\n    value: \"3495867583464\"\n  }, {\n    name: \"EmployeeBranch\",\n    value: 57\n  }]\n}];\nconst Branches = [{\n  key: 1,\n  data: [{\n    name: \"BranchCode\",\n    value: \"182\"\n  }, {\n    name: \"BranchName\",\n    value: \"Clearwater\"\n  }, {\n    name: \"BranchCategory\",\n    value: \"Branch\"\n  }, {\n    name: \"ParentBranch\",\n    value: \"Locale1\"\n  }]\n}, {\n  key: 2,\n  data: [{\n    name: \"BranchCode\",\n    value: \"526\"\n  }, {\n    name: \"BranchName\",\n    value: \"cresta\"\n  }, {\n    name: \"BranchCategory\",\n    value: \"Credit card branch\"\n  }, {\n    name: \"ParentBranch\",\n    value: \"Locale1\"\n  }]\n}, {\n  key: 3,\n  data: [{\n    name: \"BranchCode\",\n    value: \"55\"\n  }, {\n    name: \"BranchName\",\n    value: \"westgate\"\n  }, {\n    name: \"BranchCategory\",\n    value: \"Home loans branch\"\n  }, {\n    name: \"ParentBranch\",\n    value: \"Locale1\"\n  }]\n}, {\n  key: 4,\n  data: [{\n    name: \"BranchCode\",\n    value: \"19\"\n  }, {\n    name: \"BranchName\",\n    value: \"key west\"\n  }, {\n    name: \"BranchCategory\",\n    value: \"Fraud branch\"\n  }, {\n    name: \"ParentBranch\",\n    value: \"Locale1\"\n  }]\n}];\nexport function GetTreeData() {\n  //let obj = JSON.parse(test);\n  return baseTree;\n  const url = \"https://localhost:5001/api/trees\";\n  let obj = [];\n  axios.get(url).then(response => {\n    console.log(response);\n    response.data.map(Main => {\n      obj.push({\n        title: Main.data[0].value,\n        key: Main.data[1].value,\n        isLeaf: Main.data[2].value\n      });\n    }); //return baseTree;\n\n    return obj; //{ title: \"Branch1\", key: \"1\", isLeaf: false },\n    // [{\"key\":\"1\",\"data\":[{\"key\":\"title\",\"value\":\"Roodepoort\"},{\"key\":\"key\",\"value\":\"1\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"2\",\"data\":[{\"key\":\"title\",\"value\":\"Krugersdorp\"},{\"key\":\"key\",\"value\":\"2\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"4\",\"data\":[{\"key\":\"title\",\"value\":\"Fairlands\"},{\"key\":\"key\",\"value\":\"4\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"5\",\"data\":[{\"key\":\"title\",\"value\":\"Fourways\"},{\"key\":\"key\",\"value\":\"5\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]}]\n  }).catch(error => {\n    console.log(error);\n  }); //const result = obj.filter(x => x);\n  //return baseTree;\n}\nexport function GetTreeChildren(parentKey) {\n  //debugger;\n  return TreeKids.filter(x => x.Parent === parentKey);\n}\nexport const getSpecificBranchByKey = key => {\n  //TODO: make the actual call\n  const url = \"https://localhost:5001/api/tree?code=\".concat(key, \"&type=0\");\n  let obj = [];\n  fetch(url, {\n    method: \"GET\",\n    headers: new Headers({\n      Accept: \"application/vnd.github.cloak-preview\"\n    })\n  }).then(res => res.json()).then(response => {\n    console.log(response);\n    response.map(Main => {\n      obj.push({\n        key: Main.key,\n        Data: {\n          title: Main.data[0].value,\n          key: Main.data[1].value,\n          isLeaf: Main.data[2].value === \"0\" ? false : true\n        }\n      });\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n  return obj.length === 0 ? [{\n    key: \"5-9\",\n    data: [{\n      key: \"\",\n      value: \"\"\n    }]\n  }] : obj;\n};\nexport const getSpecificEmployeeByKey = param => {\n  const results = Employees.filter(q => q.key == param);\n  return results.length === 0 ? [{\n    key: \"5-9\",\n    data: [{\n      key: \"\",\n      value: \"\"\n    }]\n  }] : results;\n};\nexport const getSpecificEmployeeByData = (Name, value) => {\n  const results = Employees.filter(q => q.data.filter(x => x.name === Name && x.value === value));\n  return results.length === 0 ? [{\n    key: \"4-7\",\n    data: [{\n      key: \"\",\n      value: \"\"\n    }]\n  }] : results;\n};\nexport const PostData = (Type, isEdit, data) => {\n  //push data to api\n  return true;\n};","map":{"version":3,"sources":["E:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\MockData.js"],"names":["axios","baseTree","title","key","isLeaf","TreeKids","Parent","Employees","data","name","value","Branches","GetTreeData","url","obj","get","then","response","console","log","map","Main","push","catch","error","GetTreeChildren","parentKey","filter","x","getSpecificBranchByKey","fetch","method","headers","Headers","Accept","res","json","Data","length","getSpecificEmployeeByKey","param","results","q","getSpecificEmployeeByData","Name","PostData","Type","isEdit"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseTree = [\r\n  { title: \"Branch1\", key: \"1\", isLeaf: false },\r\n  { title: \"Branch2\", key: \"2\", isLeaf: false },\r\n  { title: \"Branch3\", key: \"3\", isLeaf: false },\r\n  { title: \"Branch4\", key: \"4\", isLeaf: false }\r\n];\r\n\r\nconst TreeKids = [\r\n  { title: \"cc309921\", Parent: \"1\", key: \"cc309921\", isLeaf: true },\r\n  { title: \"cc302066\", Parent: \"1\", key: \"cc302066\", isLeaf: true },\r\n  { title: \"cc059873\", Parent: \"1\", key: \"cc059873\", isLeaf: true },\r\n  { title: \"cc034568\", Parent: \"2\", key: \"cc034568\", isLeaf: true },\r\n  { title: \"cc284564\", Parent: \"2\", key: \"cc284564\", isLeaf: true },\r\n  { title: \"cc502365\", Parent: \"4\", key: \"cc502365\", isLeaf: true },\r\n  { title: \"cc485647\", Parent: \"4\", key: \"cc485647\", isLeaf: true }\r\n];\r\n\r\nconst Employees = [\r\n  {\r\n    key: \"cc309921\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc309921\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"Tristan\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"Donovan\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"9610225060083\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 182\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc302066\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc302066\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"mulalo\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"mudao\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"5678341290875\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 77\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc059873\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc059873\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"herman\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"Nel motors\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"45838489684353\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 57\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc034568\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc034568\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"Louis\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"Armstrong\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"2348794835435\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 57\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc284564\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc284564\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"Tiisetso\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"smith\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"4538963578493543\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 57\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc502365\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc502365\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"Mark\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"Holloway\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"345864839579843\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 57\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"cc485647\",\r\n    data: [\r\n      {\r\n        name: \"EmployeeNumber\",\r\n        value: \"cc485647\"\r\n      },\r\n      {\r\n        name: \"EmployeeName\",\r\n        value: \"michael\"\r\n      },\r\n      {\r\n        name: \"EmployeeSurname\",\r\n        value: \"Jordan\"\r\n      },\r\n      {\r\n        name: \"EmployeeLastLoggedIn\",\r\n        value: \"2020-03-12\"\r\n      },\r\n      {\r\n        name: \"EmployeeID\",\r\n        value: \"3495867583464\"\r\n      },\r\n      {\r\n        name: \"EmployeeBranch\",\r\n        value: 57\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst Branches = [\r\n  {\r\n    key: 1,\r\n    data: [\r\n      {\r\n        name: \"BranchCode\",\r\n        value: \"182\"\r\n      },\r\n      {\r\n        name: \"BranchName\",\r\n        value: \"Clearwater\"\r\n      },\r\n      {\r\n        name: \"BranchCategory\",\r\n        value: \"Branch\"\r\n      },\r\n      {\r\n        name: \"ParentBranch\",\r\n        value: \"Locale1\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 2,\r\n    data: [\r\n      {\r\n        name: \"BranchCode\",\r\n        value: \"526\"\r\n      },\r\n      {\r\n        name: \"BranchName\",\r\n        value: \"cresta\"\r\n      },\r\n      {\r\n        name: \"BranchCategory\",\r\n        value: \"Credit card branch\"\r\n      },\r\n      {\r\n        name: \"ParentBranch\",\r\n        value: \"Locale1\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 3,\r\n    data: [\r\n      {\r\n        name: \"BranchCode\",\r\n        value: \"55\"\r\n      },\r\n      {\r\n        name: \"BranchName\",\r\n        value: \"westgate\"\r\n      },\r\n      {\r\n        name: \"BranchCategory\",\r\n        value: \"Home loans branch\"\r\n      },\r\n      {\r\n        name: \"ParentBranch\",\r\n        value: \"Locale1\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 4,\r\n    data: [\r\n      {\r\n        name: \"BranchCode\",\r\n        value: \"19\"\r\n      },\r\n      {\r\n        name: \"BranchName\",\r\n        value: \"key west\"\r\n      },\r\n      {\r\n        name: \"BranchCategory\",\r\n        value: \"Fraud branch\"\r\n      },\r\n      {\r\n        name: \"ParentBranch\",\r\n        value: \"Locale1\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport function GetTreeData() {\r\n  //let obj = JSON.parse(test);\r\n  return baseTree;\r\n  const url = `https://localhost:5001/api/trees`;\r\n  let obj = [];\r\n  axios\r\n    .get(url)\r\n    .then(response => {\r\n      console.log(response);\r\n      response.data.map(Main => {\r\n        obj.push({\r\n          title: Main.data[0].value,\r\n          key: Main.data[1].value,\r\n          isLeaf: Main.data[2].value\r\n        });\r\n      });\r\n      //return baseTree;\r\n      return obj;\r\n      //{ title: \"Branch1\", key: \"1\", isLeaf: false },\r\n      // [{\"key\":\"1\",\"data\":[{\"key\":\"title\",\"value\":\"Roodepoort\"},{\"key\":\"key\",\"value\":\"1\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"2\",\"data\":[{\"key\":\"title\",\"value\":\"Krugersdorp\"},{\"key\":\"key\",\"value\":\"2\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"4\",\"data\":[{\"key\":\"title\",\"value\":\"Fairlands\"},{\"key\":\"key\",\"value\":\"4\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]},{\"key\":\"5\",\"data\":[{\"key\":\"title\",\"value\":\"Fourways\"},{\"key\":\"key\",\"value\":\"5\"},{\"key\":\"isLeaf\",\"value\":\"0\"}]}]\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n  //const result = obj.filter(x => x);\r\n  //return baseTree;\r\n}\r\nexport function GetTreeChildren(parentKey) {\r\n  //debugger;\r\n  return TreeKids.filter(x => x.Parent === parentKey);\r\n}\r\n\r\nexport const getSpecificBranchByKey = key => {\r\n  //TODO: make the actual call\r\n  const url = `https://localhost:5001/api/tree?code=${key}&type=0`;\r\n  let obj = [];\r\n  fetch(url, {\r\n    method: \"GET\",\r\n    headers: new Headers({\r\n      Accept: \"application/vnd.github.cloak-preview\"\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      console.log(response);\r\n      response.map(Main => {\r\n        obj.push({\r\n          key: Main.key,\r\n          Data: {\r\n            title: Main.data[0].value,\r\n            key: Main.data[1].value,\r\n            isLeaf: Main.data[2].value === \"0\" ? false : true\r\n          }\r\n        });\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  return obj.length === 0\r\n    ? [{ key: \"5-9\", data: [{ key: \"\", value: \"\" }] }]\r\n    : obj;\r\n};\r\n\r\nexport const getSpecificEmployeeByKey = param => {\r\n  const results = Employees.filter(q => q.key == param);\r\n  return results.length === 0\r\n    ? [{ key: \"5-9\", data: [{ key: \"\", value: \"\" }] }]\r\n    : results;\r\n};\r\nexport const getSpecificEmployeeByData = (Name, value) => {\r\n  const results = Employees.filter(q =>\r\n    q.data.filter(x => x.name === Name && x.value === value)\r\n  );\r\n  return results.length === 0\r\n    ? [{ key: \"4-7\", data: [{ key: \"\", value: \"\" }] }]\r\n    : results;\r\n};\r\n\r\nexport const PostData = (Type, isEdit, data) => {\r\n  //push data to api\r\n\r\n  return true;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}