{"ast":null,"code":"import _slicedToArray from \"E:\\\\TRISTAN\\\\Repos\\\\ReactReferenceData\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\TRISTAN\\\\Repos\\\\ReactReferenceData\\\\FluxTest\\\\src\\\\components\\\\CoverComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Demo } from \"./AntTree\";\nimport { BranchTree } from \"./AsyncTree\";\nimport { Layout, Col, Spin, Row } from \"antd\";\nimport { GeneralDisplayPage } from \"./GeneralManage\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoverPage() {\n  const _useState = useState({\n    key: \"1\",\n    isEdit: true,\n    type: \"Branch\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        KeySelected = _useState2[0],\n        setKeySelected = _useState2[1];\n\n  const Content = Layout.Content; //useEffect(() => {}, [KeySelected]);\n\n  const onClick = (value, BranchKey) => {\n    setKeySelected({\n      key: BranchKey,\n      isEdit: false,\n      type: value\n    });\n  };\n\n  const onChange = (selectedKeys, type) => {\n    console.log(\"Trigger Select\" + selectedKeys + type.node.isLeaf);\n\n    if (selectedKeys[0] !== undefined) {\n      //debugger;\n      setKeySelected({\n        key: selectedKeys[0],\n        isEdit: true,\n        type: type.node.isLeaf ? \"Employee\" : \"Branch\"\n      });\n    }\n  };\n\n  return React.createElement(Layout, {\n    style: {\n      height: \"100%\",\n      minHeight: \"600px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    spinning: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Content, {\n    className: \"container-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Hunting 2.0!\"), React.createElement(Row, {\n    gutter: 16,\n    style: {\n      height: \"100%\",\n      minHeight: \"600px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Col, {\n    span: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(BranchTree, {\n    onSelect: onChange,\n    onRightClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 13,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(GeneralDisplayPage, {\n    GenKey: KeySelected.key,\n    isEdit: KeySelected.isEdit,\n    type: KeySelected.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))))));\n}\n\nexport default CoverPage;","map":{"version":3,"sources":["E:\\TRISTAN\\Repos\\ReactReferenceData\\FluxTest\\src\\components\\CoverComponent.js"],"names":["React","useState","useEffect","Demo","BranchTree","Layout","Col","Spin","Row","GeneralDisplayPage","Link","loadCourses","deleteCourse","CoverPage","key","isEdit","type","KeySelected","setKeySelected","Content","onClick","value","BranchKey","onChange","selectedKeys","console","log","node","isLeaf","undefined","height","minHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,MAAvC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;;AAEA,SAASC,SAAT,GAAqB;AAAA,oBACmBZ,QAAQ,CAAC;AAC7Ca,IAAAA,GAAG,EAAE,GADwC;AAE7CC,IAAAA,MAAM,EAAE,IAFqC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAD,CAD3B;AAAA;AAAA,QACZC,WADY;AAAA,QACCC,cADD;;AAAA,QAOXC,OAPW,GAOCd,MAPD,CAOXc,OAPW,EASnB;;AAEA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACpCJ,IAAAA,cAAc,CAAC;AAAEJ,MAAAA,GAAG,EAAEQ,SAAP;AAAkBP,MAAAA,MAAM,EAAE,KAA1B;AAAiCC,MAAAA,IAAI,EAAEK;AAAvC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAG,CAACC,YAAD,EAAeR,IAAf,KAAwB;AACvCS,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,YAAnB,GAAkCR,IAAI,CAACW,IAAL,CAAUC,MAAxD;;AACA,QAAIJ,YAAY,CAAC,CAAD,CAAZ,KAAoBK,SAAxB,EAAmC;AACjC;AACAX,MAAAA,cAAc,CAAC;AACbJ,QAAAA,GAAG,EAAEU,YAAY,CAAC,CAAD,CADJ;AAEbT,QAAAA,MAAM,EAAE,IAFK;AAGbC,QAAAA,IAAI,EAAEA,IAAI,CAACW,IAAL,CAAUC,MAAV,GAAmB,UAAnB,GAAgC;AAHzB,OAAD,CAAd;AAKD;AACF,GAVD;;AAYA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAER,QAAtB;AAAgC,IAAA,YAAY,EAAEH,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAME,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAEH,WAAW,CAACH,GADtB;AAEE,IAAA,MAAM,EAAEG,WAAW,CAACF,MAFtB;AAGE,IAAA,IAAI,EAAEE,WAAW,CAACD,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAFF,CADF,CADF,CADF;AAuBD;;AAED,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Demo } from \"./AntTree\";\r\nimport { BranchTree } from \"./AsyncTree\";\r\nimport { Layout, Col, Spin, Row } from \"antd\";\r\nimport { GeneralDisplayPage } from \"./GeneralManage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\n\r\nfunction CoverPage() {\r\n  const [KeySelected, setKeySelected] = useState({\r\n    key: \"1\",\r\n    isEdit: true,\r\n    type: \"Branch\",\r\n  });\r\n\r\n  const { Content } = Layout;\r\n\r\n  //useEffect(() => {}, [KeySelected]);\r\n\r\n  const onClick = (value, BranchKey) => {\r\n    setKeySelected({ key: BranchKey, isEdit: false, type: value });\r\n  };\r\n\r\n  const onChange = (selectedKeys, type) => {\r\n    console.log(\"Trigger Select\" + selectedKeys + type.node.isLeaf);\r\n    if (selectedKeys[0] !== undefined) {\r\n      //debugger;\r\n      setKeySelected({\r\n        key: selectedKeys[0],\r\n        isEdit: true,\r\n        type: type.node.isLeaf ? \"Employee\" : \"Branch\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: \"100%\", minHeight: \"600px\" }}>\r\n      <Spin spinning={false}>\r\n        <Content className=\"container-center\">\r\n          <h2>Hunting 2.0!</h2>\r\n          <Row gutter={16} style={{ height: \"100%\", minHeight: \"600px\" }}>\r\n            <Col span={1}></Col>\r\n            <Col span={6}>\r\n              <BranchTree onSelect={onChange} onRightClick={onClick} />\r\n              {/* <Demo mySelect={onChange} myClick={onClick} /> */}\r\n            </Col>\r\n            <Col span={13}>\r\n              <GeneralDisplayPage\r\n                GenKey={KeySelected.key}\r\n                isEdit={KeySelected.isEdit}\r\n                type={KeySelected.type}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Spin>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CoverPage;\r\n"]},"metadata":{},"sourceType":"module"}