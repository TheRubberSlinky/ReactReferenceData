{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\GeneralManage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSpecificEmployeeByKey } from './MockData';\nexport function GeneralDisplayPage(props) {\n  const _useState = useState([{\n    key: \"0\",\n    data: [{\n      name: '',\n      value: ''\n    }]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    //setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\n    setData(getSpecificEmployeeByKey(props.GenKey)); //   switch (props.GenKey) {\n    //     case 'Locale':\n    //     case 'Branch':\n    //     case 'Employee':\n    //       GetSpecificEmployee();\n    //       break;\n    //       default:\n    //        break;\n    //   }\n  }, [props.GenKey]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, Data.map(memes => {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, memes.key), memes.data.map(Values => {\n      return React.createElement(\"li\", {\n        key: Values.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }));\n  }), \" */}\");\n}\nGeneralDisplayPage.propTypes = {\n  GenKey: PropTypes.string.isRequired\n};\nexport default GeneralDisplayPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\GeneralManage.js"],"names":["React","useState","useEffect","PropTypes","getSpecificEmployeeByKey","GeneralDisplayPage","props","key","data","name","value","Data","setData","GenKey","map","memes","Values","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,wBAAR,QAAuC,YAAvC;AAGA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,oBACdL,QAAQ,CAAC,CAAC;AAACM,IAAAA,GAAG,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAD;AAAjB,GAAD,CAAD,CADM;AAAA;AAAA,QAC/BC,IAD+B;AAAA,QACzBC,OADyB;;AAGtCV,EAAAA,SAAS,CAAC,MAAM;AACV;AACFU,IAAAA,OAAO,CAACR,wBAAwB,CAACE,KAAK,CAACO,MAAP,CAAzB,CAAP,CAFY,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAdQ,EAcN,CAACP,KAAK,CAACO,MAAP,CAdM,CAAT;AAeA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,IAAI,CAACG,GAAL,CAASC,KAAK,IAAI;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACR,GAAX,CADG,EAEFQ,KAAK,CAACP,IAAN,CAAWM,GAAX,CAAeE,MAAM,IAAI;AACtB,aACI;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACP,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH,KAPA,CAFE,CAAP;AAWH,GAZA,CADD,SADJ;AA+BH;AAGDJ,kBAAkB,CAACY,SAAnB,GAA+B;AAC3BJ,EAAAA,MAAM,EAAEV,SAAS,CAACe,MAAV,CAAiBC;AADE,CAA/B;AAIE,eAAed,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getSpecificEmployeeByKey} from './MockData'\r\n\r\n\r\nexport function GeneralDisplayPage(props) {\r\n    const [Data, setData] = useState([{key: \"0\", data: [{name: '', value: ''}]}]);\r\n    \r\n    useEffect(() => {\r\n          //setData([{Key: \"0\", Data: [{name: '', value: ''}]}]);\r\n        setData(getSpecificEmployeeByKey(props.GenKey));\r\n      \r\n\r\n    //   switch (props.GenKey) {\r\n    //     case 'Locale':\r\n    //     case 'Branch':\r\n    //     case 'Employee':\r\n    //       GetSpecificEmployee();\r\n    //       break;\r\n    //       default:\r\n    //        break;\r\n    //   }\r\n    }, [props.GenKey]);\r\n    return (\r\n        <div>\r\n        {Data.map(memes => {\r\n            return(<ul>\r\n                <h2>{memes.key}</h2>\r\n                {memes.data.map(Values => {\r\n                    return(\r\n                        <li key={Values.name}>\r\n                            <h4></h4>\r\n                            <input/>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>);\r\n        })}\r\n        {/* // {Data.map(x => {} */}\r\n        {/* //     \r\n        //         <ul>\r\n        //         <p>{x.key}</p>\r\n\r\n        // {/* x[0].Data.map(Values => (\r\n        //   <li\r\n        //     key={Values.name}\r\n        //   >\r\n        //     <p>{Values.name}</p>\r\n        //     <input value={Values.value} />\r\n        //   </li> */}\r\n        {/* //   </ul> */}\r\n        {/* //    */} */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nGeneralDisplayPage.propTypes = {\r\n    GenKey: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default GeneralDisplayPage;"]},"metadata":{},"sourceType":"module"}