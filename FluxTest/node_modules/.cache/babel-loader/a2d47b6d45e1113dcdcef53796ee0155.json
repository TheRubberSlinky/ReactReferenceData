{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\popup.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"antd/dist/antd.css\";\nimport { Popover, Button } from \"antd\";\nexport function popup(props) {\n  const _true = true,\n        _true2 = _slicedToArray(_true, 2),\n        visible = _true2[0],\n        setVisible = _true2[1];\n\n  function handleVisibleChange(visibility) {\n    setVisible(!visibility);\n  }\n\n  return React.createElement(Popover, {\n    content: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Edit\"), props.isAddable ? React.createElement(\"button\", {\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Add\") : \"\"),\n    title: \"Title\",\n    trigger: \"click\",\n    visible: visible,\n    onVisibleChange: handleVisibleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Click me\"));\n}\npopup.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  Key: PropTypes.string.isRequired,\n  isAddable: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\popup.js"],"names":["React","PropTypes","Popover","Button","popup","props","visible","setVisible","handleVisibleChange","visibility","onClick","isAddable","propTypes","func","isRequired","Key","string","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,gBACG,IADH;AAAA;AAAA,QACpBC,OADoB;AAAA,QACXC,UADW;;AAG3B,WAASC,mBAAT,CAA6BC,UAA7B,EAAyC;AACvCF,IAAAA,UAAU,CAAC,CAACE,UAAF,CAAV;AACD;;AACD,SACE,oBAAC,OAAD;AACE,IAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,KAAK,CAACM,SAAN,GAAkB;AAAQ,MAAA,OAAO,EAAEN,KAAK,CAACK,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB,GAAiE,EAFpE,CAFJ;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,OAAO,EAAC,OARV;AASE,IAAA,OAAO,EAAEJ,OATX;AAUE,IAAA,eAAe,EAAEE,mBAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF;AAgBD;AACDJ,KAAK,CAACQ,SAAN,GAAkB;AAChBF,EAAAA,OAAO,EAAET,SAAS,CAACY,IAAV,CAAeC,UADR;AAEhBC,EAAAA,GAAG,EAAEd,SAAS,CAACe,MAAV,CAAiBF,UAFN;AAGhBH,EAAAA,SAAS,EAAEV,SAAS,CAACgB,IAAV,CAAeH;AAHV,CAAlB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Popover, Button } from \"antd\";\r\n\r\nexport function popup(props) {\r\n  const [visible, setVisible] = true;\r\n\r\n  function handleVisibleChange(visibility) {\r\n    setVisible(!visibility);\r\n  }\r\n  return (\r\n    <Popover\r\n      content={\r\n        <div>\r\n          <button onClick={props.onClick}>Edit</button>\r\n          {props.isAddable ? <button onClick={props.onClick}>Add</button> : \"\"}\r\n        </div>\r\n      }\r\n      title=\"Title\"\r\n      trigger=\"click\"\r\n      visible={visible}\r\n      onVisibleChange={handleVisibleChange}\r\n    >\r\n      <Button type=\"primary\">Click me</Button>\r\n    </Popover>\r\n  );\r\n}\r\npopup.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  Key: PropTypes.string.isRequired,\r\n  isAddable: PropTypes.bool.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}