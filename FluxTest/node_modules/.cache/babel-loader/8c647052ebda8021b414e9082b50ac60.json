{"ast":null,"code":"import _slicedToArray from \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TRISTAN\\\\Repos\\\\React-Reference-Data\\\\FluxTest\\\\src\\\\components\\\\CoverComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Demo } from \"./AntTree\";\nimport { GeneralDisplayPage } from \"./GeneralManage\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoverPage() {\n  const _useState = useState({\n    key: \"1\",\n    isEdit: true,\n    type: \"Branch\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        KeySelected = _useState2[0],\n        setKeySelected = _useState2[1]; //useEffect(() => {}, [KeySelected]);\n\n\n  const onClick = value => {\n    debugger;\n    setKeySelected({\n      key: \"0\",\n      isEdit: false,\n      type: value\n    });\n  };\n\n  const onChange = (selectedKeys, type) => {\n    console.log(\"Trigger Select\" + selectedKeys + event.node.isLeaf);\n\n    if (selectedKeys[0] !== undefined) {\n      let split = selectedKeys[0].split(\",\");\n      setKeySelected({\n        key: split[0],\n        isEdit: true,\n        type: split[1] === \"E\" ? \"Employee\" : \"Branch\"\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Hunting 2.0!\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-md-2\",\n    style: {\n      boxShadow: \"2px 1px 2px black\",\n      borderRadius: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Demo, {\n    mySelect: onChange,\n    myClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-md-3\",\n    style: {\n      boxShadow: \"2px 1px 2px black\",\n      borderRadius: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(GeneralDisplayPage, {\n    GenKey: KeySelected.key,\n    isEdit: KeySelected.isEdit,\n    type: KeySelected.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}\n\nexport default CoverPage;","map":{"version":3,"sources":["C:\\TRISTAN\\Repos\\React-Reference-Data\\FluxTest\\src\\components\\CoverComponent.js"],"names":["React","useState","useEffect","Demo","GeneralDisplayPage","Link","loadCourses","deleteCourse","CoverPage","key","isEdit","type","KeySelected","setKeySelected","onClick","value","onChange","selectedKeys","console","log","event","node","isLeaf","undefined","split","boxShadow","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;;AAEA,SAASC,SAAT,GAAqB;AAAA,oBACmBP,QAAQ,CAAC;AAC7CQ,IAAAA,GAAG,EAAE,GADwC;AAE7CC,IAAAA,MAAM,EAAE,IAFqC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAD,CAD3B;AAAA;AAAA,QACZC,WADY;AAAA,QACCC,cADD,kBAOnB;;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB;AACAF,IAAAA,cAAc,CAAC;AAAEJ,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,MAAM,EAAE,KAApB;AAA2BC,MAAAA,IAAI,EAAEI;AAAjC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeN,IAAf,KAAwB;AACvCO,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,YAAnB,GAAkCG,KAAK,CAACC,IAAN,CAAWC,MAAzD;;AACA,QAAIL,YAAY,CAAC,CAAD,CAAZ,KAAoBM,SAAxB,EAAmC;AACjC,UAAIC,KAAK,GAAGP,YAAY,CAAC,CAAD,CAAZ,CAAgBO,KAAhB,CAAsB,GAAtB,CAAZ;AACAX,MAAAA,cAAc,CAAC;AACbJ,QAAAA,GAAG,EAAEe,KAAK,CAAC,CAAD,CADG;AAEbd,QAAAA,MAAM,EAAE,IAFK;AAGbC,QAAAA,IAAI,EAAEa,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,GAAmB,UAAnB,GAAgC;AAHzB,OAAD,CAAd;AAKD;AACF,GAVD;;AAYA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,mBAAb;AAAkCC,MAAAA,YAAY,EAAE;AAAhD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEV,QAAhB;AAA0B,IAAA,OAAO,EAAEF,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAE,mBAAb;AAAkCC,MAAAA,YAAY,EAAE;AAAhD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAEd,WAAW,CAACH,GADtB;AAEE,IAAA,MAAM,EAAEG,WAAW,CAACF,MAFtB;AAGE,IAAA,IAAI,EAAEE,WAAW,CAACD,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CATF,EAmBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFF,CADF;AA0BD;;AAED,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Demo } from \"./AntTree\";\r\nimport { GeneralDisplayPage } from \"./GeneralManage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\n\r\nfunction CoverPage() {\r\n  const [KeySelected, setKeySelected] = useState({\r\n    key: \"1\",\r\n    isEdit: true,\r\n    type: \"Branch\"\r\n  });\r\n\r\n  //useEffect(() => {}, [KeySelected]);\r\n\r\n  const onClick = value => {\r\n    debugger;\r\n    setKeySelected({ key: \"0\", isEdit: false, type: value });\r\n  };\r\n\r\n  const onChange = (selectedKeys, type) => {\r\n    console.log(\"Trigger Select\" + selectedKeys + event.node.isLeaf);\r\n    if (selectedKeys[0] !== undefined) {\r\n      let split = selectedKeys[0].split(\",\");\r\n      setKeySelected({\r\n        key: split[0],\r\n        isEdit: true,\r\n        type: split[1] === \"E\" ? \"Employee\" : \"Branch\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Hunting 2.0!</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div\r\n          className=\"col-md-2\"\r\n          style={{ boxShadow: \"2px 1px 2px black\", borderRadius: \"5px\" }}\r\n        >\r\n          <Demo mySelect={onChange} myClick={onClick} />\r\n        </div>\r\n        <div className=\"col-md-1\"></div>\r\n        <div\r\n          className=\"col-md-3\"\r\n          style={{ boxShadow: \"2px 1px 2px black\", borderRadius: \"5px\" }}\r\n        >\r\n          <GeneralDisplayPage\r\n            GenKey={KeySelected.key}\r\n            isEdit={KeySelected.isEdit}\r\n            type={KeySelected.type}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoverPage;\r\n"]},"metadata":{},"sourceType":"module"}